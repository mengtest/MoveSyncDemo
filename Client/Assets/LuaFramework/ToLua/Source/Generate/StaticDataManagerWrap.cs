//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class StaticDataManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(StaticDataManager), typeof(Singleton<StaticDataManager>));
		L.RegFunction("InitData", InitData);
		L.RegFunction("GetActorTable", GetActorTable);
		L.RegFunction("GetSkillTable", GetSkillTable);
		L.RegFunction("New", _CreateStaticDataManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateStaticDataManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				StaticDataManager obj = new StaticDataManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: StaticDataManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			StaticDataManager obj = (StaticDataManager)ToLua.CheckObject<StaticDataManager>(L, 1);
			obj.InitData();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetActorTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			StaticDataManager obj = (StaticDataManager)ToLua.CheckObject<StaticDataManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			LuaInterface.LuaTable o = obj.GetActorTable(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSkillTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			StaticDataManager obj = (StaticDataManager)ToLua.CheckObject<StaticDataManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			LuaInterface.LuaTable o = obj.GetSkillTable(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

