//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SaveDataManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SaveDataManager), typeof(Manager));
		L.RegFunction("getFloat", getFloat);
		L.RegFunction("getInt", getInt);
		L.RegFunction("getString", getString);
		L.RegFunction("getBool", getBool);
		L.RegFunction("setFloat", setFloat);
		L.RegFunction("setInt", setInt);
		L.RegFunction("setString", setString);
		L.RegFunction("setBool", setBool);
		L.RegFunction("save", save);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getFloat(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				float o = obj.getFloat(arg0);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (count == 3)
			{
				SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				float o = obj.getFloat(arg0, arg1);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SaveDataManager.getFloat");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getInt(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int o = obj.getInt(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3)
			{
				SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				int o = obj.getInt(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SaveDataManager.getInt");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getString(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string o = obj.getString(arg0);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (count == 3)
			{
				SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string o = obj.getString(arg0, arg1);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SaveDataManager.getString");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getBool(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool o = obj.getBool(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 3)
			{
				SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				bool o = obj.getBool(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SaveDataManager.getBool");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setFloat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.setFloat(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.setInt(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.setString(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setBool(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setBool(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int save(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SaveDataManager obj = (SaveDataManager)ToLua.CheckObject<SaveDataManager>(L, 1);
			obj.save();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

